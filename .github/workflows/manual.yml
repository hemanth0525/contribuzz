name: Manage Gist Subscribers

on:
  workflow_dispatch:
    inputs:
      email:
        description: 'Email address to subscribe'
        required: true
        default: 'example@example.com'

jobs:
  manage-subscriber:
    runs-on: ubuntu-latest

    steps:
      - name: Set up environment variables
        run: |
          echo "GIST_TOKEN=${{ secrets.GIST_TOKEN }}" >> $GITHUB_ENV
          echo "GIST_ID=${{ secrets.GIST_ID }}" >> $GITHUB_ENV

      - name: Fetch Gist Content
        id: fetch_gist
        run: |
          gist_response=$(curl -s -H "Authorization: token $GIST_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/gists/${{ env.GIST_ID }}")
          echo "$gist_response" > gist_response.json
          echo "::set-output name=gist_content::$(cat gist_response.json)"

      - name: Parse existing subscribers
        id: parse_subscribers
        run: |
          current_content=$(jq -r '.files["subscribers.json"].content' gist_response.json)
          email_list=$(echo "$current_content" | jq -r '.emailList // []')
          echo "::set-output name=email_list::$email_list"

      - name: Check if email exists
        id: check_email
        run: |
          email_list="${{ steps.parse_subscribers.outputs.email_list }}"
          email="${{ github.event.inputs.email }}"
          if echo "$email_list" | grep -q "$email"; then
            echo "Email already exists in the notification list."
            echo "::set-output name=email_exists::true"
          else
            echo "Email does not exist."
            echo "::set-output name=email_exists::false"
          fi

      - name: Add new subscriber
        if: steps.check_email.outputs.email_exists == 'false'
        run: |
          email="${{ github.event.inputs.email }}"
          updated_email_list=$(echo "$email_list" | jq -R . | jq -s .)
          updated_email_list=$(echo "$updated_email_list" | jq --arg email "$email" '. += [$email]')
          
          # Update Gist with new list
          curl -X PATCH "https://api.github.com/gists/${{ env.GIST_ID }}" \
            -H "Authorization: token $GIST_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d "{\"files\": {\"subscribers.json\": {\"content\": $(jq -n --argjson list "$updated_email_list" '{ emailList: $list }')}}}}"

          echo "Thank you for subscribing!"
        else:
          echo "No action taken."

      - name: Handle error
        if: steps.check_email.outputs.email_exists == 'true'
        run: |
          echo "Failed to add subscriber: Email already exists."
